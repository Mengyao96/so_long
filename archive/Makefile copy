MODULE_SRC = mlx_image.swift mlx_window.swift mlx_init.swift
MODULE_OBJ = $(MODULE_SRC:.swift=.swiftmodule)

SRC = interface.swift $(MODULE_SRC)
# We don't need to explicitly create .o files, swiftc will handle them implicitly.
# The linker needs the swift modules and the C object files.

C_SRC = mlx_xpm.c mlx_png.c mlx_string_put.c
C_OBJ = $(C_SRC:.c=.o)
CFLAGS = -O3

NAME = libmlx.dylib

INC = -I.

all: $(NAME)

$(NAME): $(MODULE_OBJ) $(C_OBJ)
	swiftc $(INC) -o $(NAME) -emit-library $(MODULE_SRC) $(C_OBJ) -lz

%.swiftmodule: %.swift
	swiftc $(INC) -parse-as-library -c $< -o $@ -emit-module -module-name $(patsubst %.swift,%,$<) -module-link-name $(patsubst %.swift,%,$<)

%.o: %.c
	$(CC) $(CFLAGS) $(INC) -c $< -o $@

clean:
	rm -f $(NAME) $(C_OBJ) $(MODULE_OBJ) *.swiftdoc *~
